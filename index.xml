<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>William&#39;s blog</title>
    <link>https://williamlsh.github.io/</link>
    <description>Recent content on William&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright Â© William</copyright>
    <lastBuildDate>Mon, 03 Aug 2020 11:27:59 +0800</lastBuildDate>
    
	<atom:link href="https://williamlsh.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to Deploy Containerized Redis Sentinel</title>
      <link>https://williamlsh.github.io/posts/how-to-deploy-containerized-redis-sentinel/</link>
      <pubDate>Mon, 03 Aug 2020 11:27:59 +0800</pubDate>
      
      <guid>https://williamlsh.github.io/posts/how-to-deploy-containerized-redis-sentinel/</guid>
      <description>In this blog, I will illustrate Redis Sentinel deployment with Docker which will be based on Redis Replication deployment described in the last post.
 Redis Sentinel provides high availability for Redis. In practical terms this means that using Sentinel you can create a Redis deployment that resists without human intervention certain kinds of failures.
&amp;mdash; Quote from Redis Sentinel Documentation
 Sentinels with Docker Compose We will need at least three Sentinel instances for the minimal deployment requirement plus a minimal replication set.</description>
    </item>
    
    <item>
      <title>How to Deploy Containerized Redis Replica</title>
      <link>https://williamlsh.github.io/posts/how-to-deploy-containerized-redis-replica/</link>
      <pubDate>Sat, 01 Aug 2020 22:27:37 +0800</pubDate>
      
      <guid>https://williamlsh.github.io/posts/how-to-deploy-containerized-redis-replica/</guid>
      <description>In this blog, I will illustrate Redis Replication deployment with Docker. Surely this could be the simplest solution against the simplest situation.
 At the base of Redis replication (excluding the high availability features provided as an additional layer by Redis Cluster or Redis Sentinel) there is a very simple to use and configure leader follower (master-slave) replication: it allows replica Redis instances to be exact copies of master instances. The replica will automatically reconnect to the master every time the link breaks, and will attempt to be an exact copy of it regardless of what happens to the master.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://williamlsh.github.io/about/</link>
      <pubDate>Sat, 01 Aug 2020 21:02:49 +0800</pubDate>
      
      <guid>https://williamlsh.github.io/about/</guid>
      <description>Focused on software engineering with Go, Rust and C.</description>
    </item>
    
  </channel>
</rss>